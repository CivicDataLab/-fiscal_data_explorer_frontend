//ref code for writing filteration

#state variable:
filterArray = [];
//the above gets updated whenever an onchange on any filter is detected, pushing the name of dropdown and value of option into the array.

when filter change, we push into fiterArray:

{ key: demand, value: someVal }

so then the filterArray looks like:

filterArray = [
  { key: demand, value: someVal },
  { key: demand, value: someVal },
  { key: demand, value: someVal }
]



api_response.map((d,i) =>{ ...

//now in the code, after conditional for date substr, and pushing clone into the sasrdata array:

if(filterArray.length !== 0 ){  //only if there is some filter applied then take the trouble of running this code
  var match = 0;
  filterArray.map(f => {
    if([f.key] === f.val) {   //[f.key] removes the string and makes it a reference to the key in the 'd' object. basically f.key will give us the respecitve d.value
      match++;
    }
  })
  if match === filterArray.length{ //meaning this particular d record qualifies all the filters.
    SASRdata[SASRdata.length-1].sanction += sanction;
    SASRdata[SASRdata.length-1].addition += addition;
    SASRdata[SASRdata.length-1].revised += revised;
    SASRdata[SASRdata.length-1].savings += savings;
  }
} else {
  SASRdata[SASRdata.length-1].sanction += sanction;
  SASRdata[SASRdata.length-1].addition += addition;
  SASRdata[SASRdata.length-1].revised += revised;
  SASRdata[SASRdata.length-1].savings += savings;
}

...}
